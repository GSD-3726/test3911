name: Run Node.js Script

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21.5.0'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          v1/package-lock.json
          utils/package-lock.json

    # 关键修改：先尝试 npm ci，失败时回退到 npm install
    - name: Install root dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi

    - name: Install v1 dependencies
      working-directory: ./v1
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi

    - name: Install utils dependencies
      working-directory: ./utils
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi

    # 确保 NODE_PATH 正确指向 utils 目录
    - name: Set NODE_PATH environment variable
      run: echo "NODE_PATH=$GITHUB_WORKSPACE/utils" >> $GITHUB_ENV

    # 调试步骤：验证路径和文件存在性
    - name: Debug - Verify paths and files
      run: |
        echo "NODE_PATH: $NODE_PATH"
        echo "Utils directory exists: $([ -d utils ] && echo 'YES' || echo 'NO')"
        echo "fetchList.js exists: $([ -f utils/fetchList.js ] && echo 'YES' || echo 'NO')"
        echo "v1/fetchURL.js content: $(head -n 3 v1/fetchURL.js)"

    - name: Run Script
      working-directory: ./v1
      run: node fetchURL.js
      env:
        NODE_PATH: ${{ env.NODE_PATH }}

    - name: Commit and push changes
      if: always()
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add v1/interface.txt
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: auto-update by GitHub Actions"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
